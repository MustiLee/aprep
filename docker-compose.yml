version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aprep-postgres
    environment:
      POSTGRES_USER: aprep
      POSTGRES_PASSWORD: aprep
      POSTGRES_DB: aprep_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aprep"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aprep-network

  # Aprep API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aprep-api
    environment:
      - DATABASE_URL=postgresql://aprep:aprep@postgres:5432/aprep_db
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}  # Set in .env file
      - CLAUDE_MODEL_SONNET=claude-sonnet-4-20250514
      - CLAUDE_MODEL_OPUS=claude-opus-4-20250514
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aprep-network
    restart: unless-stopped

  # Redis (for caching and task queue)
  redis:
    image: redis:7-alpine
    container_name: aprep-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aprep-network
    restart: unless-stopped

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: aprep-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@aprep.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - aprep-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  aprep-network:
    driver: bridge
